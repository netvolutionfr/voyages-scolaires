services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - voyages_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 3s
      retries: 10

  api:
    image: ghcr.io/netvolutionfr/voyages-scolaires:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      SERVER_SHUTDOWN: graceful
      JAVA_OPTS: -XX:MaxRAMPercentage=75
      # accès S3 via MinIO
      S3_ENDPOINT: http://minio:9000
      S3_REGION: us-east-1
      S3_BUCKET: voyages
      S3_ACCESS_KEY: ${MINIO_ROOT_USER}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    ports:
      - "127.0.0.1:8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9090/actuator/health/readiness"]
      interval: 15s
      timeout: 5s
      retries: 8
    deploy:
      resources:
        limits:
          memory: "1g"

  minio:
    image: quay.io/minio/minio:RELEASE.2025-09-07T16-13-09Z
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - voyages_minio:/data
    ports:
      - "127.0.0.1:9000:9000" # API S3
      - "127.0.0.1:9001:9001" # Console Web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # (optionnel) client CLI pour init le bucket au démarrage
  minio-init:
    image: quay.io/minio/mc:RELEASE.2025-09-07T16-13-09Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/voyages || true
      "

volumes:
  voyages_pgdata:
  voyages_minio:
